!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.Rosetree={})}(this,function(e){"use strict";const t=[0],r="POST_ORDER",n="PRE_ORDER",s="BFS",o=".";function i(e){return void 0===e?void 0:JSON.parse(JSON.stringify(e))}function c(e,t){return Object.assign({},e,t)}function a(e,t){return Array.apply(null,{length:t}).map(Number.call,Number).map(e)}const u=e=>e.join(o);function h(e,t,r){r.forEach((r,n)=>{const s=e.get(t),o=e.get(r),i=o&&o.path;e.set(r,c(o,{isAdded:!0,isVisited:!1,path:i||s.path.concat(n)}))})}function l(e,t){e.set(t,c(e.get(t),{isVisited:!0}))}function d(e,r){const{store:n,lenses:s,traverse:o}=e,{empty:c,add:a,takeAndRemoveOne:u,isEmpty:d}=n,{getChildren:g}=s,{visit:f,seed:p}=o,y=new Map,O="function"==typeof p?new(p()):i(p);let v="function"==typeof c?new(c()):i(c),b=O;for(a([r],v),y.set(r,{isAdded:!0,isVisited:!1,path:t});!d(v);){const e=u(v),t=g(y,e);a(t,v),h(y,e,t),b=f(b,y,e),l(y,e)}return y.clear(),b}function g(e,t,r){const{getChildren:n}=e;return d({store:{empty:[],takeAndRemoveOne:e=>e.shift(),isEmpty:e=>0===e.length,add:(e,t)=>t.push.apply(t,e)},lenses:{getChildren:(e,t)=>n(t)},traverse:t},r)}function f(e,t,r){const{getChildren:n}=e;return d({store:{empty:[],takeAndRemoveOne:e=>e.shift(),isEmpty:e=>0===e.length,add:(e,t)=>t.unshift(...e)},lenses:{getChildren:(e,t)=>n(t)},traverse:t},r)}function p(e,t,r){const{getChildren:n}=e,{seed:s,visit:o}=t,i=(e,t)=>t.get(e).isVisited||((e,t)=>0===n(e,t).length)(e,t);return d({store:{empty:[],takeAndRemoveOne:e=>e.shift(),isEmpty:e=>0===e.length,add:(e,t)=>t.unshift(...e)},lenses:{getChildren:(e,t)=>i(t,e)?[]:n(t,e).concat([t])},traverse:{seed:s,visit:(e,t,r)=>i(r,t)?o(e,t,r):e}},r)}function y(e,r,n){const{getChildren:s,constructTree:i,getLabel:c}=e,u=e=>e.join(o),h=p(e,{seed:()=>Map,visit:(e,t,n)=>{const{path:o}=t.get(n),h=r(c(n)),l=a(t=>e.get(u(o.concat(t))),((e,t)=>s(e,t).length)(n,t)),d=i(h,l);return e.set(u(o),d),e}},n),l=h.get(u(t));return h.clear(),l}function O(e){function t(e,t,r){return[e,t].join(r)}return{getLabel:e=>{const{cursor:t,hash:r}=e;return{label:r[t],hash:r,cursor:t}},getChildren:r=>{const{cursor:n,hash:s}=r;let o=0,i=[];for(;t(n,o,e)in s;)i.push({cursor:t(n,o,e),hash:s}),o++;return i},constructTree:(e,t)=>{const{label:r,hash:n,cursor:s}=e;return{cursor:s,hash:c(t.reduce((e,t)=>c(e,t.hash),{}),{[s]:r})}}}}const v={getLabel:e=>{if("object"!=typeof e||Array.isArray(e)||1!==Object.keys(e).length)throw"getLabel > unexpected object tree value";return e},getChildren:e=>{if("object"!=typeof e||Array.isArray(e)||1!==Object.keys(e).length)throw"getChildren > unexpected value";{let t=Object.values(e)[0];return"object"!=typeof t||Array.isArray(t)?[]:Object.keys(t).map(e=>({[e]:t[e]}))}},constructTree:(e,t)=>{const r=e&&Object.keys(e)&&Object.keys(e)[0];return 0===t.length?e:{[r]:Object.assign.apply(null,t)}}};const b={getLabel:e=>Array.isArray(e)?e[0]:e,getChildren:e=>Array.isArray(e)?e[1]:[],constructTree:(e,t)=>t&&Array.isArray(t)&&t.length>0?[e,t]:e};e.POST_ORDER=r,e.PRE_ORDER=n,e.BFS=s,e.SEP=o,e.visitTree=d,e.breadthFirstTraverseTree=g,e.preorderTraverseTree=f,e.postOrderTraverseTree=p,e.reduceTree=function(e,t,r){const n=t.strategy,s={BFS:g,PRE_ORDER:f,POST_ORDER:p};if(!(n in s))throw"Unknown tree traversal strategy!";return s[n](e,t,r)},e.forEachInTree=function(e,t,o){const{strategy:i,action:c}=t,a={[s]:g,[n]:f,[r]:p};if(!(i in a))throw"Unknown tree traversal strategy!";const u={seed:void 0,visit:(e,t,r)=>c(r,t)};return a[i](e,u,o)},e.mapOverTree=y,e.pruneWhen=function(e,t,r){const{getChildren:n}=e;return y(c(e,{getChildren:(e,r)=>t(e,r)?[]:n(e,r)}),e=>e,r)},e.getHashedTreeLenses=O,e.mapOverHashTree=function(e,t,r){return y(O(e),({label:e,hash:r,cursor:n})=>({label:t(e),hash:r,cursor:n}),r)},e.objectTreeLenses=v,e.mapOverObj=function({key:e,leafValue:t},r){const n=e("root");var s;return y(v,r=>{const n=Object.keys(r)[0],o=r[n];return{[e(n)]:(s=v.getLabel(r),0!==v.getChildren({[s.key]:s.value}).length||function(e){return e&&0===Object.keys(e).length&&e.constructor===Object}(o)?o:t(o))}},{root:r})[n]},e.traverseObj=function(e,r){const n={root:r},{strategy:s,seed:o,visit:i}=e;return({BFS:g,PRE_ORDER:f,POST_ORDER:p}[s]||f)(v,{seed:o,visit:function(e,r,n){const{path:s}=r.get(n);return s===t?e:i(e,r,n)}},n)},e.arrayTreeLenses=b,e.switchTreeDataStructure=function(e,r,n){const{getLabel:s,getChildren:o}=e,{constructTree:i}=r;return p(e,{seed:()=>Map,visit:(e,t,r)=>{const{path:n}=t.get(r),c=s(r),h=a(t=>e.get(u(n.concat(t))),((e,t)=>o(e,t).length)(r,t));return e.set(u(n),i(c,h)),e}},n).get(u(t))},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=rosetree.umd.min.js.map
